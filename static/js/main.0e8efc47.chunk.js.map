{"version":3,"sources":["components/UI/Preloader/Preloader.module.scss","components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","components/UI/Button/Button.module.scss","components/UI/Input/Input.module.scss","containers/Auth/Auth.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","containers/QuizList/QuizList.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","redux/actions/actionTypes.js","redux/reducers/quiz.js","redux/reducers/rootReducer.js","redux/store.js","components/Navigation/MenuToggle/MenuToggle.jsx","components/UI/Backdrop/Backdrop.jsx","components/Navigation/Drawer/Drawer.jsx","hoc/Layout/Layout.jsx","components/UI/Button/Button.jsx","form/formFramework.js","components/UI/Input/Input.jsx","components/UI/Select/Select.jsx","axios/axios.js","containers/QuizCreator/QuizCreator.jsx","redux/actions/actions.js","components/UI/Preloader/Preloader.jsx","containers/QuizList/QuizList.jsx","containers/Auth/Auth.jsx","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.jsx","components/ActiveQuiz/AnswersList/AnswersList.jsx","components/ActiveQuiz/ActiveQuiz.jsx","components/FinishedQuiz/FinishedQuiz.jsx","containers/Quiz/Quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FETCH_QUIZ_START","FETCH_QUIZ_SUCCESS","FETCH_QUIZ_BY_ID_SUCCESS","FETCH_QUIZ_ERROR","ANSWER_SET_STATE","FINISHED_QUIZ","NEXT_QUESTION","RESTART_QUIZ","initialState","error","isFetch","quizes","results","isFinished","activeQuestion","answerState","quiz","state","action","type","payload","combineReducers","store","createStore","require","rootReducer","applyMiddleware","thunk","MenuToggle","props","cls","style","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","renderLinks","map","link","index","activeClassName","active","this","React","Component","Layout","menu","menuToggleHandler","setState","menuCloseHandler","children","Button","disabled","createFormControl","config","validation","value","valid","touched","validateControl","isValid","required","trim","formValidate","formControls","isFormValid","control","hasOwnProperty","Input","inputType","isInvalid","shouldValidate","invalid","onChange","errorMessage","Select","htmlFor","Math","random","id","options","option","i","text","axios","create","baseURL","createOptionControl","number","createFormControls","question","option1","option2","option3","option4","QuizCreator","rightAnswer","onChangeHandler","controlName","onSubmitHandler","event","preventDefault","addQuestionHandler","length","answers","createQuizHandler","a","post","console","log","alert","renderFormControls","Object","keys","Fragment","e","target","changeAnswerHandler","select","onSubmit","fetchQuizStart","fetchQuizSuccess","fetchQuizByIdSuccess","fetchQuizError","answerSetState","quizAnswerClick","answerId","dispatch","getState","key","timeout","window","setTimeout","isQuizFinished","clearTimeout","Preloader","inner","one","two","three","QuizList","useDispatch","useSelector","useEffect","get","response","data","el","color","textAlign","marginBottom","marginTop","Auth","email","maxLength","password","minLength","submitHandler","is","forEach","item","inputRenderHandler","loginHandler","formData","returnSecureToken","registerHandler","authForm","AnswerItem","classes","onAnswerClick","answer","AnswersList","withRouter","ActiveQuiz","Question","questionNumber","quizLengh","rightResults","filter","result","FinishedQuiz","quizItem","iconStyle","onRestart","history","pathname","Quiz","fetchQuizById","match","params","QuizWrapper","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e8efc47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__hkvDg\",\"inner\":\"Preloader_inner__3O2tq\",\"one\":\"Preloader_one__3_8VF\",\"cssload-rotate-one\":\"Preloader_cssload-rotate-one__2aB5T\",\"two\":\"Preloader_two__22MmK\",\"cssload-rotate-two\":\"Preloader_cssload-rotate-two__3YRrP\",\"three\":\"Preloader_three__5M-0O\",\"cssload-rotate-three\":\"Preloader_cssload-rotate-three__665J5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__22aaR\",\"open\":\"Drawer_open__EbHQ7\",\"active\":\"Drawer_active__2aLCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1fJoi\",\"open\":\"MenuToggle_open__33Jj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27nIK\",\"error\":\"Button_error__2oC04\",\"success\":\"Button_success__36jEY\",\"primary\":\"Button_primary__27cMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__QC66r\",\"invalid\":\"Input_invalid__UdupQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1wdql\",\"authForm\":\"Auth_authForm__3RZ_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2IG4x\",\"QuizWrapper\":\"Quiz_QuizWrapper__2H7XH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1-bM-\",\"Question\":\"ActiveQuiz_Question__2RJfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3XcvL\",\"error\":\"AnswerItem_error__lqh-F\",\"success\":\"AnswerItem_success__1Mprz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2W6U8\",\"error\":\"FinishedQuiz_error__2wW1G\",\"success\":\"FinishedQuiz_success__1aq4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2XCjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__36QFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__1k1kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2wesw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__AE5Kf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2D91W\"};","export const FETCH_QUIZ_START = \"quiz/FETCH_QUIZ_START\";\r\nexport const FETCH_QUIZ_SUCCESS = \"quiz/FETCH_QUIZ_SUCCESS\";\r\nexport const FETCH_QUIZ_BY_ID_SUCCESS = \"quiz/FETCH_QUIZ_BY_ID_SUCCESS\";\r\nexport const FETCH_QUIZ_ERROR = \"quiz/SET_QUIZ_ERROR\";\r\n\r\nexport const ANSWER_SET_STATE = \"quiz/ANSWER_SET_STATE\";\r\nexport const FINISHED_QUIZ = \"quiz/FINISHED_QUIZ\";\r\nexport const NEXT_QUESTION = \"quiz/NEXT_QUESTION\";\r\nexport const RESTART_QUIZ = \"quiz/RESTART_QUIZ\";\r\n\r\n\r\n","import {\r\n    FETCH_QUIZ_ERROR,\r\n    FETCH_QUIZ_START,\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZ_BY_ID_SUCCESS, RESTART_QUIZ, ANSWER_SET_STATE, FINISHED_QUIZ, NEXT_QUESTION,\r\n} from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    error: null,\r\n    isFetch: false,\r\n    quizes: [],\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null, // {[id]: \"success\" || \"error\"}\r\n    quiz: null,\r\n}\r\nconst quiz = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_QUIZ_START:{\r\n            return {\r\n                ...state,\r\n                isFetch: true\r\n            }\r\n        }\r\n        case FETCH_QUIZ_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isFetch: false,\r\n                quizes: action.payload\r\n            }\r\n        }\r\n        case FETCH_QUIZ_BY_ID_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isFetch: false,\r\n                quiz: action.payload\r\n            }\r\n        }\r\n        case FETCH_QUIZ_ERROR: {\r\n            return {\r\n                ...state,\r\n                isFetch: false,\r\n                error: action.error\r\n            }\r\n        }\r\n        case ANSWER_SET_STATE: {\r\n            return {\r\n                ...state,\r\n                answerState: action.answerState\r\n            }\r\n        }\r\n        case FINISHED_QUIZ: {\r\n            return {\r\n                ...state,\r\n                isFinished: true\r\n            }\r\n        }\r\n        case NEXT_QUESTION: {\r\n            return {\r\n                ...state,\r\n                activeQuestion: state.activeQuestion + 1\r\n            }\r\n        }\r\n        case RESTART_QUIZ: {\r\n            return {\r\n                ...state,\r\n                isFinished: false,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                // Надо ли очищать массив имутабельно\r\n                results: [],\r\n            }\r\n        }\r\n\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default quiz;","import {combineReducers} from \"redux\";\r\nimport quiz from \"./quiz\";\r\n\r\nexport default combineReducers({\r\n    quiz: quiz,\r\n});","import {applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst {createStore} = require(\"redux\");\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from \"react\";\r\nimport style from \"./MenuToggle.module.scss\";\r\n\r\nconst MenuToggle = props =>{\r\n\r\n    const cls = [\r\n        style[\"MenuToggle\"],\r\n        \"fa\"\r\n    ]\r\n\r\n    if (props.isOpen){\r\n        cls.push(style.open);\r\n        cls.push(\"fa-times\");\r\n    }else {\r\n        cls.push(\"fa-bars\");\r\n    }\r\n\r\n    return(\r\n        <i\r\n            className={cls.join(\" \")}\r\n            onClick={props.onToggle}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MenuToggle;","import React from \"react\";\r\nimport style from \"./Backdrop.module.scss\";\r\n\r\nconst Backdrop = props => {\r\n    return(\r\n        <div className={style.Backdrop} onClick={props.onClick}/>\r\n    )\r\n}\r\n\r\nexport default Backdrop;","import React from \"react\";\r\nimport style from \"./Drawer.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nconst links = [\r\n    {to: \"/\", label: \"Список тестов\", exact: true},\r\n    {to: \"/quiz-creator\", label: \"Добавить тест\", exact: false},\r\n    {to: \"/auth\", label: \"Авторизация\", exact: false},\r\n];\r\n\r\nclass Drawer extends React.Component {\r\n    renderLinks = () => {\r\n        return (\r\n            links.map((link, index) => (\r\n                <li key={index}>\r\n                    <NavLink exact={link.exact}\r\n                             to={link.to}\r\n                             activeClassName={style.active}\r\n                             onClick={this.props.onClick}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            ))\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isOpen && <Backdrop onClick={this.props.onClick}/>}\r\n                <nav className={style.Drawer + \" \" + (this.props.isOpen && style.open)}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Drawer;","import React from \"react\";\r\nimport style from \"./Layout.module.scss\";\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\nclass Layout extends React.Component {\r\n\r\n    state = {\r\n        menu: false,\r\n    }\r\n    menuToggleHandler = () =>{\r\n        this.setState({menu: !this.state.menu});\r\n    }\r\n    menuCloseHandler = () =>{\r\n        this.setState({menu: false});\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={style.Layout}>\r\n\r\n                <Drawer isOpen={this.state.menu} onClick={this.menuCloseHandler}/>\r\n                <MenuToggle\r\n                    isOpen={this.state.menu}\r\n                    onToggle={this.menuToggleHandler}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport style from \"./Button.module.scss\";\r\n\r\nconst Button = props => {\r\n\r\n    const cls = [\r\n        style[\"Button\"],\r\n        style[props.type]\r\n    ]\r\n\r\n    return(\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(\" \")}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","export const createFormControl = (config = {}, validation = {}) => {\r\n    return {\r\n        value: \"\",\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n    }\r\n}\r\n\r\nexport const validateControl = (value, validation = null) => {\r\n    if (!validation) {\r\n        return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required && isValid) {\r\n        isValid = value.trim() !== \"\";\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport const formValidate = (formControls) => {\r\n    let isFormValid = true;\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n\r\n    return isFormValid;\r\n}","import React from \"react\";\r\nimport style from \"./Input.module.scss\";\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || \"text\";\r\n    const cls = [style.Input,]\r\n\r\n    const isInvalid = ({touched, valid, shouldValidate}) => {\r\n        return !valid && shouldValidate && touched;\r\n    }\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(style.invalid);\r\n    }\r\n\r\n    return(\r\n        <div className={cls.join(\" \")}>\r\n            <label>\r\n                {props.label}\r\n            </label>\r\n            <input\r\n                type={inputType}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {isInvalid(props) && <span>{props.errorMessage || \"Введите верное значение\"}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from \"react\";\r\nimport style from \"./Select.module.scss\";\r\n\r\nconst Select = props => {\r\n    const htmlFor = props.label + Math.random();\r\n    return (\r\n      <div className={style.Select}>\r\n          <label htmlFor={htmlFor}>{props.label}</label>\r\n          <select\r\n              id={htmlFor}\r\n              value={props.value}\r\n              onChange={props.onChange}\r\n          >\r\n              {\r\n                  props.options.map((option, i) => {\r\n                     return (\r\n                         <option key={i} value={option.value}>{option.text}</option>\r\n                     );\r\n                  })\r\n              }\r\n          </select>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://quiz-react-app-3094a-default-rtdb.firebaseio.com/',\r\n});","import React from \"react\";\r\nimport style from \"./QuizCreator.module.scss\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport {createFormControl, formValidate, validateControl} from \"../../form/formFramework\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport axios from \"../../axios/axios\";\r\n\r\nconst createOptionControl = (number) => {\r\n    return createFormControl({\r\n        label: `Ответ ${number}`,\r\n        errorMessage: \"Текст не может быть пустым\",\r\n        id: number\r\n    }, {required: true});\r\n}\r\n\r\nconst createFormControls = () => {\r\n    return {\r\n        question: createFormControl({\r\n            label: \"Введите вопрос\",\r\n            errorMessage: \"Вопрос не может быть пустым\"\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends React.Component {\r\n    state = {\r\n        rightAnswer: 1,\r\n        isFormValid: false,\r\n        quiz: [],\r\n        formControls: createFormControls()\r\n    }\r\n    onChangeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.value = value;\r\n        control.touched = true;\r\n        control.valid = validateControl(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: formValidate(formControls)\r\n        });\r\n\r\n    }\r\n    onSubmitHandler = event => {\r\n        event.preventDefault();\r\n    }\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault();\r\n        let quiz = [...this.state.quiz];\r\n        const index = quiz.length + 1;\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls;\r\n\r\n        quiz.push({\r\n            id: index,\r\n            question: question.value,\r\n            rightAnswer: +this.state.rightAnswer,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id},\r\n            ]\r\n        });\r\n        this.setState({\r\n            quiz,\r\n            rightAnswer: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        });\r\n    }\r\n    createQuizHandler = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await axios.post(\"quizes.json\", this.state.quiz);\r\n            this.setState({\r\n                rightAnswer: 1,\r\n                isFormValid: false,\r\n                formControls: createFormControls(),\r\n                quiz: []\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n            alert('Какая-то ошибка');\r\n        }\r\n    }\r\n    renderFormControls = () => {\r\n        return (\r\n            Object.keys(this.state.formControls).map((controlName, index) => {\r\n                const control = this.state.formControls[controlName];\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <Input\r\n                            label={control.label}\r\n                            errorMessage={control.errorMessage}\r\n                            valid={control.valid}\r\n                            shouldValidate={!!control.validation}\r\n                            touched={control.touched}\r\n                            value={control.value}\r\n                            onChange={(e) => {\r\n                                this.onChangeHandler(e.target.value, controlName)\r\n                            }}\r\n                        />\r\n                        {index === 0 && <hr/>}\r\n                    </React.Fragment>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    changeAnswerHandler = (event) => {\r\n        this.setState({\r\n            rightAnswer: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const select = (\r\n            <Select\r\n                label=\"Выберите правильный ответ\"\r\n                value={this.state.rightAnswer}\r\n                onChange={this.changeAnswerHandler}\r\n                options={[\r\n                    {value: 1, text: 1},\r\n                    {value: 2, text: 2},\r\n                    {value: 3, text: 3},\r\n                    {value: 4, text: 4}\r\n                ]}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div className={style.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.onSubmitHandler}>\r\n                        {this.renderFormControls()}\r\n                        {select}\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.state.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                        <div>Вопросов добавлено {this.state.quiz.length}</div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizCreator;","import axios from \"../../axios/axios\";\r\n\r\nimport {\r\n    FETCH_QUIZ_START,\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZ_ERROR,\r\n    FETCH_QUIZ_BY_ID_SUCCESS, RESTART_QUIZ, ANSWER_SET_STATE, FINISHED_QUIZ, NEXT_QUESTION\r\n} from \"./actionTypes\";\r\n\r\n\r\nexport const fetchQuizStart = () => ({\r\n    type: FETCH_QUIZ_START\r\n});\r\n\r\nexport const fetchQuizSuccess = (payload) => {\r\n    return {type: FETCH_QUIZ_SUCCESS, payload};\r\n}\r\n\r\nexport const fetchQuizByIdSuccess = (payload) => {\r\n    return {type: FETCH_QUIZ_BY_ID_SUCCESS, payload};\r\n}\r\n\r\nexport const fetchQuizError = (error) => ({\r\n    type: FETCH_QUIZ_ERROR,\r\n    error\r\n});\r\n\r\nexport const answerSetState = (answerState) => ({\r\n    type: ANSWER_SET_STATE, answerState\r\n});\r\n\r\nexport const nextQuestion = () => ({\r\n    type: NEXT_QUESTION\r\n});\r\n\r\nexport const finishedQuiz = () => ({\r\n    type: FINISHED_QUIZ\r\n});\r\n\r\nexport const restartQuiz = () => {\r\n    return {type: RESTART_QUIZ};\r\n}\r\n\r\n\r\n\r\n\r\nexport const fetchQuiz = () => async dispatch => {\r\n    dispatch(fetchQuizStart());\r\n\r\n    try {\r\n        const response = await axios.get(\"quizes.json\");\r\n        const payload = Object.keys(response.data).map(el => ({id: el}));\r\n        dispatch(fetchQuizSuccess(payload));\r\n\r\n    } catch (e) {\r\n        dispatch(fetchQuizError(e));\r\n    }\r\n}\r\n\r\nexport const fetchQuizById = (id = {}) => async dispatch => {\r\n    dispatch(fetchQuizStart());\r\n    try {\r\n        let response = await axios.get(`quizes/${id}.json`);\r\n        dispatch(fetchQuizByIdSuccess(response.data));\r\n    } catch (e) {\r\n        dispatch(fetchQuizError(e));\r\n    }\r\n}\r\n\r\n\r\n//Получаем правильный ответ у активного вопроса;\r\n// если в answerState success то return;\r\n// answerState существует для присвоения класса success или error при клике;\r\n// Сравниваем правильный ответ с введенным;\r\n//Если true записываем в answerState и (results(толко если нет false) id и success);\r\n//Ждем секунду и проверяем последний ли вопрос в списке;\r\n// Если true выводим Окно с правильными ответами;\r\n// Если false переключаем вопрос на следующий;\r\n//Если false записываем в answerState и results id и error ;\r\nexport const quizAnswerClick = (answerId) => (dispatch, getState) => {\r\n    const state = getState().quiz;\r\n\r\n    if (state.answerState) {\r\n        const key = Object.keys(state.answerState)[0];\r\n        if (state.answerState[key] === \"success\") {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion];\r\n    const results = state.results;\r\n\r\n    if (question.rightAnswer === answerId) {\r\n        if (!results[question.id]) {\r\n            results[question.id] = \"success\";\r\n        }\r\n        dispatch(answerSetState({[answerId]: \"success\", results}));\r\n\r\n        const timeout = window.setTimeout(() => {\r\n            dispatch(answerSetState(null));\r\n\r\n            if (isQuizFinished()) {\r\n                dispatch(finishedQuiz());\r\n            } else {\r\n                dispatch(nextQuestion());\r\n            }\r\n            window.clearTimeout(timeout);\r\n        }, 1000)\r\n\r\n    } else {\r\n        results[question.id] = \"error\"\r\n        dispatch(answerSetState({[answerId]: \"error\", results}));\r\n    }\r\n    const isQuizFinished = () => {\r\n        return state.activeQuestion + 1 === state.quiz.length;\r\n    }\r\n}","import React from \"react\";\r\nimport style from \"./Preloader.module.scss\";\r\n\r\nconst Preloader = props => (\r\n    <div className={style.Preloader}>\r\n        <div className={style.inner + \" \" + style.one}/>\r\n        <div className={style.inner + \" \" + style.two}/>\r\n        <div className={style.inner + \" \" + style.three}/>\r\n    </div>\r\n);\r\n\r\nexport default Preloader;","import React, {useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport style from \"./QuizList.module.scss\";\r\nimport {fetchQuiz} from \"../../redux/actions/actions\";\r\nimport Preloader from \"../../components/UI/Preloader/Preloader\";\r\n\r\nconst QuizList = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const isFetch = useSelector(state => state.quiz.isFetch)\r\n    const quizes = useSelector(state => state.quiz.quizes)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchQuiz());\r\n    }, [dispatch]);\r\n\r\n    const renderQuizes = () => {\r\n        if (quizes) {\r\n            return quizes.map((quiz, index) => (\r\n                <li key={index}>\r\n                    <NavLink to={\"/quiz/\" + quiz.id}>Тест № {index + 1}</NavLink>\r\n                </li>\r\n            ));\r\n        } else {\r\n            return (\r\n                <div style={{color: \"white\", textAlign: \"center\"}}>\r\n                    <h3 style={{marginBottom: \"0\"}}>Тестов нет</h3>\r\n                    <h4 style={{marginTop: \"0\"}}>Будут позже</h4>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.QuizList}>\r\n            <div>\r\n                <h1>QuizList</h1>\r\n                {\r\n                    isFetch\r\n                        ? <Preloader/>\r\n                        : <ul>\r\n                            {renderQuizes()}\r\n                        </ul>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default QuizList;","import React from \"react\";\r\nimport Button from \"./../../components/UI/Button/Button\";\r\nimport style from \"./Auth.module.scss\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from \"is_js\";\r\nimport axios from \"axios\";\r\n\r\nclass Auth extends React.Component {\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: \"\",\r\n                type: \"email\",\r\n                label: \"Email\",\r\n                errorMessage: \"\",\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true,\r\n                    maxLength: 25\r\n                }\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                type: \"password\",\r\n                label: \"Пароль\",\r\n                errorMessage: \"\",\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 50\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    validateControl = (value, validation) => {\r\n        if (!validation) {\r\n            return true;\r\n        }\r\n\r\n        let isValid = true;\r\n\r\n        if (validation.required) {\r\n            if (value.trim() !== \"\") {\r\n                isValid = true;\r\n            } else {\r\n                return {isValid: false, errorMessage: \"Поле не должно быть пустым\"}\r\n            }\r\n        }\r\n\r\n        if (validation.email) {\r\n            if (is.email(value)) {\r\n                isValid = true;\r\n            } else {\r\n                return {isValid: false, errorMessage: \"Введите корректный Email\"}\r\n            }\r\n        }\r\n\r\n        if (validation.minLength) {\r\n            if (value.trim().length >= validation.minLength) {\r\n                isValid = true;\r\n            } else {\r\n                return {isValid: false, errorMessage: `Минимальная длинна ${validation.minLength} символов`}\r\n            }\r\n        }\r\n\r\n        if (validation.maxLength) {\r\n            if (value.trim().length < validation.maxLength) {\r\n                isValid = true;\r\n            } else {\r\n                return {isValid: false, errorMessage: `Максимальная длинна ${validation.maxLength} символов`}\r\n            }\r\n        }\r\n\r\n        return {isValid};\r\n    }\r\n\r\n    onChangeHandler = (e, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n        control.value = e.target.value;\r\n        control.touched = true;\r\n\r\n        let validateControl = this.validateControl(control.value, control.validation);\r\n        control.valid = validateControl.isValid;\r\n        control.errorMessage = validateControl.errorMessage;\r\n\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach(item => {\r\n            isFormValid = formControls[item].valid && isFormValid;\r\n        });\r\n\r\n        this.setState({formControls, isFormValid});\r\n    }\r\n\r\n    inputRenderHandler = () => {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    value={control.value}\r\n                    onChange={(e) => {\r\n                        this.onChangeHandler(e, controlName)\r\n                    }}\r\n                    type={control.type}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    shouldValidate={!!control.validation}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    loginHandler = async () => {\r\n        const formData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value,\r\n            returnSecureToken: true\r\n        }\r\n        try {\r\n            const response = await axios\r\n                .post(\r\n                    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBw1voB5XeccAUeeQByIgJKRRhcjoNOR3I\",\r\n                    formData\r\n                );\r\n            console.log(response);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    registerHandler = async () => {\r\n        const formData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value,\r\n            returnSecureToken: true\r\n        }\r\n        try {\r\n            const response = await axios\r\n                .post(\r\n                    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBw1voB5XeccAUeeQByIgJKRRhcjoNOR3I\",\r\n                    formData\r\n                );\r\n            console.log(response);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form className={style.authForm} onSubmit={this.submitHandler}>\r\n\r\n                        {this.inputRenderHandler()}\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport style from \"./AnswerItem.module.scss\"\r\n\r\nconst AnswerItem = props => {\r\n    const classes = [\r\n        style.AnswerItem,\r\n    ]\r\n    if (props.answerState) {\r\n        classes.push(style[props.answerState]);\r\n    }\r\n\r\n    return (\r\n        <li className={classes.join(\" \")}\r\n            onClick={()=>{props.onAnswerClick(props.answer.id)}}\r\n        >{props.answer.text}</li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from \"react\";\r\nimport style from \"./AnswersList.module.scss\"\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => (\r\n    <ul className={style.AnswersList}>\r\n        {props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswerItem key={index} answer={answer}\r\n                            onAnswerClick={props.onAnswerClick}\r\n                            answerState={props.answerState ? props.answerState[answer.id] : null}\r\n                />\r\n            );\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default AnswersList;","import React from \"react\";\r\nimport style from \"./ActiveQuiz.module.scss\";\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst ActiveQuiz = (props) => {\r\n    return (\r\n        <div className={style.ActiveQuiz}>\r\n            <p className={style.Question}>\r\n                <span>\r\n                <strong>{props.questionNumber}.</strong>\r\n                &nbsp; {props.question}\r\n                </span>\r\n                <small>{props.questionNumber} из {props.quizLengh}</small>\r\n            </p>\r\n            <AnswersList answers={props.answers}\r\n                         onAnswerClick={props.onAnswerClick}\r\n                         answerState={props.answerState}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(ActiveQuiz);","import React from \"react\";\r\nimport style from \"./FinishedQuiz.module.scss\"\r\nimport Button from \"../UI/Button/Button\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n    const rightResults = Object.keys(props.results).filter(result => props.results[result] === \"success\");\r\n\r\n    const goToListQuizHandler = () =>{\r\n        props.onRestart();\r\n        // Это можно заменить обернув кнопку в компонент <Link />\r\n        props.history.push({\r\n            pathname:\"/\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={style.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const iconStyle = [\r\n                        \"fa\",\r\n                        props.results[quizItem.id] === \"success\" ? \"fa fa-check\" : \"fa fa-times\",\r\n                        style[props.results[quizItem.id]]\r\n                    ]\r\n                    return (\r\n                        <li key={quizItem.id}>\r\n                            <strong>{index + 1}</strong>&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={iconStyle.join(\" \")}/>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n\r\n            <p>Правильно {rightResults.length} из {props.quizLengh}</p>\r\n            <div>\r\n                <Button onClick={props.onRestart} type={\"primary\"}>Повторить</Button>\r\n                <Button onClick={goToListQuizHandler} type={\"success\"}>Перейтии к списку тестов</Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(FinishedQuiz);","import React, {useEffect} from \"react\";\r\nimport style from \"./Quiz.module.scss\";\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\nimport Preloader from \"../../components/UI/Preloader/Preloader\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    fetchQuizById,\r\n    quizAnswerClick,\r\n    restartQuiz\r\n} from \"../../redux/actions/actions\";\r\n\r\nconst Quiz = props => {\r\n    const state = useSelector(state => {\r\n        return {\r\n            results: state.quiz.results,\r\n            isFinished: state.quiz.isFinished,\r\n            activeQuestion: state.quiz.activeQuestion,\r\n            answerState: state.quiz.answerState,\r\n            quiz: state.quiz.quiz,\r\n            isFetch: state.quiz.isFetch,\r\n        }\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const onAnswerClickHandler = answerId => {\r\n        dispatch(quizAnswerClick(answerId));\r\n    }\r\n\r\n    const restartHandler = () => {\r\n        dispatch(restartQuiz());\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchQuizById(props.match.params.id));\r\n    }, [dispatch, props.match.params.id]);\r\n\r\n    return (\r\n        <div className={style.Quiz}>\r\n            <div className={style.QuizWrapper}>\r\n                <h1>Ответьте на все вопросы</h1>\r\n                {\r\n                    state.isFetch || !state.quiz\r\n                        ? <Preloader/>\r\n                        : <>\r\n                            {state.isFinished\r\n                                ? <FinishedQuiz\r\n                                    quizLengh={state.quiz.length}\r\n                                    quiz={state.quiz}\r\n                                    results={state.results}\r\n                                    onRestart={restartHandler}\r\n                                />\r\n                                : <ActiveQuiz\r\n                                    question={state.quiz[state.activeQuestion].question}\r\n                                    answers={state.quiz[state.activeQuestion].answers}\r\n                                    onAnswerClick={onAnswerClickHandler}\r\n                                    quizLengh={state.quiz.length}\r\n                                    questionNumber={state.activeQuestion + 1}\r\n                                    answerState={state.answerState}\r\n                                />\r\n                            }\r\n                        </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;","import {Switch, Route} from \"react-router-dom\";\nimport Layout from \"./hoc/Layout/Layout\";\n\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Quiz from \"./containers/Quiz/Quiz\";\n\n\n\nfunction App() {\n    return (\n        <Layout >\n            <Switch>\n                <Route path='/auth' component={Auth}/>\n                <Route path='/quiz-creator' component={QuizCreator}/>\n                <Route path='/quiz/:id' component={Quiz}/>\n                <Route exact path='/#' component={QuizList}/>\n            </Switch>\n\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./redux/store\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nlet app = (\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        {app}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}