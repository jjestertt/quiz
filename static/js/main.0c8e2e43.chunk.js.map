{"version":3,"sources":["components/UI/Preloader/Preloader.module.scss","components/Navigation/Drawer/Drawer.module.scss","components/TotalError/TotalError.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","components/UI/Button/Button.module.scss","components/UI/Input/Input.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","containers/QuizList/QuizList.module.scss","containers/Auth/Auth.module.scss","containers/Auth/AuthForm/AuthForm.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","redux/actions/actionTypes.js","redux/reducers/quiz.js","redux/reducers/create.js","redux/reducers/auth.js","redux/reducers/rootReducer.js","redux/store.js","components/Navigation/MenuToggle/MenuToggle.jsx","components/UI/Backdrop/Backdrop.jsx","components/UI/Button/Button.jsx","components/Navigation/Drawer/Drawer.jsx","axios/axios.js","redux/actions/actions.js","redux/actions/auth.js","components/TotalError/TotalError.jsx","hoc/Layout/Layout.jsx","redux/actions/create.js","helpers/validate.js","components/UI/Input/Input.jsx","components/UI/Select/Select.jsx","containers/QuizCreator/QuizCreatorForm/QuizCreatorForm.jsx","containers/QuizCreator/QuizCreator.jsx","components/UI/Preloader/Preloader.jsx","containers/QuizList/QuizList.jsx","containers/Auth/AuthForm/AuthForm.jsx","containers/Auth/Auth.jsx","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.jsx","components/ActiveQuiz/AnswersList/AnswersList.jsx","components/ActiveQuiz/ActiveQuiz.jsx","components/FinishedQuiz/FinishedQuiz.jsx","containers/Quiz/Quiz.jsx","components/Logout/Logout.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FETCH_QUIZ_START","FETCH_QUIZ_SUCCESS","FETCH_QUIZ_BY_ID_SUCCESS","FETCH_QUIZ_ERROR","QUIZ_SET_STATE","NEXT_QUESTION","QUIZ_FINISHED","QUIZ_RETRY","ADD_QUESTION","QUIZ_CLEAR","AUTH_SUCCESS","AUTH_LOGOUT","initialState","error","isFetch","quizes","results","isFinished","activeQuestion","answerState","quiz","state","action","type","payload","createReducer","newQuestion","filter","token","authReducer","combineReducers","create","auth","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","rootReducer","MenuToggle","props","cls","style","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Button","disabled","children","Drawer","renderLinks","links","map","link","index","exact","to","activeClassName","active","label","this","isAuth","marginLeft","React","Component","axios","baseURL","fetchQuizStart","fetchQuizSuccess","fetchQuizError","quizSetState","quizRetry","toggleQuizError","dispatch","setTimeout","quizAnswerClick","answerId","getState","key","Object","keys","question","rightAnswer","id","timeout","isQuizFinished","clearTimeout","length","authSuccess","authLogout","localStorage","removeItem","autoLogout","time","login","email","password","isLogin","a","authData","returnSecureToken","url","post","response","data","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","TotalError","closeErrorHandler","errorClose","Layout","menu","menuToggleHandler","setState","menuCloseHandler","connect","quizClear","authValidate","values","errors","test","quizCreateValidate","forEach","field","Input","inputType","isValid","meta","touched","name","invalid","htmlFor","Select","Math","random","options","option","i","text","QuizCreatorForm","createQuizHandler","addQuestionHandler","initialValues","option1","option2","option3","option4","validate","onSubmit","dirty","handleReset","as","value","e","preventDefault","QuizCreator","useDispatch","useSelector","useEffect","answers","console","log","alert","Preloader","inner","one","two","three","QuizList","get","el","color","textAlign","marginBottom","margin","marginTop","AuthForm","loginHandler","registerHandler","authForm","onLoginHandler","onRegisterHandler","Auth","AnswerItem","classes","onAnswerClick","answer","AnswersList","withRouter","ActiveQuiz","Question","questionNumber","quizLengh","rightResults","result","onRestart","FinishedQuiz","quizItem","iconStyle","history","pathname","Quiz","match","params","toString","QuizWrapper","Logout","getItem","currentDate","expirationDateFrontend","routes","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c8e2e43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__13zsU\",\"inner\":\"Preloader_inner__1SMf8\",\"one\":\"Preloader_one__1dTte\",\"cssload-rotate-one\":\"Preloader_cssload-rotate-one__3X2V9\",\"two\":\"Preloader_two__Q_uDB\",\"cssload-rotate-two\":\"Preloader_cssload-rotate-two__2N_HN\",\"three\":\"Preloader_three__2wnFm\",\"cssload-rotate-three\":\"Preloader_cssload-rotate-three__14D_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"open\":\"Drawer_open__3ZQEA\",\"active\":\"Drawer_active__2oACK\",\"logout\":\"Drawer_logout__1YKq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TotalError\":\"TotalError_TotalError__2rR4c\",\"errorClose\":\"TotalError_errorClose__S3XGU\",\"active\":\"TotalError_active__3eYY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"error\":\"Button_error__A4xET\",\"success\":\"Button_success__qdwm8\",\"primary\":\"Button_primary__CVuDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\",\"QuizWrapper\":\"Quiz_QuizWrapper__2wTef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2OH8k\",\"Question\":\"ActiveQuiz_Question__3-k9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__uovHA\",\"error\":\"AnswerItem_error__2qb2c\",\"success\":\"AnswerItem_success__XCXzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2aARn\",\"error\":\"FinishedQuiz_error__2PlTT\",\"success\":\"FinishedQuiz_success__2EeEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authForm\":\"AuthForm_authForm__Kpi7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1ulOJ\"};","export const FETCH_QUIZ_START = \"quiz/FETCH_QUIZ_START\";\nexport const FETCH_QUIZ_SUCCESS = \"quiz/FETCH_QUIZ_SUCCESS\";\nexport const FETCH_QUIZ_BY_ID_SUCCESS = \"quiz/FETCH_QUIZ_BY_ID_SUCCESS\";\nexport const FETCH_QUIZ_ERROR = \"quiz/SET_QUIZ_ERROR\";\n\nexport const QUIZ_SET_STATE = \"quiz/QUIZ_SET_STATE\";\nexport const NEXT_QUESTION = \"quiz/NEXT_QUESTION\";\nexport const QUIZ_FINISHED = \"quiz/QUIZ_FINISHED\";\nexport const QUIZ_RETRY = \"quiz/QUIZ_RETRY\";\n\nexport const ADD_QUESTION = \"quizCreator/ADD_QUESTION\";\nexport const QUIZ_CLEAR = \"quizCreator/QUIZ_CLEAR\";\n\nexport const AUTH_SUCCESS = \"auth/AUTH_SUCCESS\";\nexport const AUTH_LOGOUT = \"auth/AUTH_LOGOUT\";","import {\n    FETCH_QUIZ_ERROR, FETCH_QUIZ_START,\n    FETCH_QUIZ_SUCCESS, FETCH_QUIZ_BY_ID_SUCCESS,\n    QUIZ_SET_STATE, NEXT_QUESTION, QUIZ_FINISHED,\n    QUIZ_RETRY} from \"../actions/actionTypes\";\n\nconst initialState = {\n    error: null,\n    isFetch: false,\n    quizes: [],\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // {[id]: \"success\" || \"error\"}\n    quiz: null,\n}\nconst quiz = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_QUIZ_START:{\n            return {\n                ...state,\n                isFetch: true\n            }\n        }\n        case FETCH_QUIZ_SUCCESS: {\n            return {\n                ...state,\n                isFetch: false,\n                quizes: action.payload\n            }\n        }\n        case FETCH_QUIZ_BY_ID_SUCCESS: {\n            return {\n                ...state,\n                isFetch: false,\n                quiz: action.payload\n            }\n        }\n        case FETCH_QUIZ_ERROR: {\n            return {\n                ...state,\n                isFetch: false,\n                error: action.error\n            }\n        }\n        case QUIZ_SET_STATE: {\n            return {\n                ...state,\n                answerState: action.answerState,\n                results: action.results\n            }\n        }\n        case NEXT_QUESTION: {\n            return {\n                ...state,\n                activeQuestion: state.activeQuestion + 1,\n                answerState: null\n            }\n        }\n        case QUIZ_FINISHED: {\n            return {\n                ...state,\n                isFinished: true\n            }\n        }\n        case QUIZ_RETRY: {\n            return {\n                ...state,\n                isFinished: false,\n                activeQuestion: 0,\n                answerState: null,\n                // Надо ли очищать массив имутабельно\n                results: {},\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default quiz;","import {ADD_QUESTION, QUIZ_CLEAR} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quiz: [],\n}\n\nconst createReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_QUESTION: {\n            return {\n                ...state,\n                quiz: [...state.quiz, action.newQuestion]\n            }\n        }\n        case QUIZ_CLEAR: {\n            return {\n                ...state,\n                quiz: state.quiz.filter(() => false)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default createReducer;","import {AUTH_SUCCESS, AUTH_LOGOUT} from \"../actions/actionTypes\";\n\nconst initialState = {\n    token: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AUTH_SUCCESS: {\n            return {\n                ...state,\n                token: action.token\n            }\n        }\n        case AUTH_LOGOUT: {\n            return {\n                ...state,\n                token: null\n            }\n        }\n        default :{\n            return state;\n        }\n    }\n}\n\nexport default authReducer;","import {combineReducers} from \"redux\";\nimport quiz from \"./quiz\";\nimport createReducer from \"./create\";\nimport authReducer from \"./auth\";\n\nexport default combineReducers({\n    quiz: quiz,\n    create: createReducer,\n    auth: authReducer\n});","import {applyMiddleware, compose, createStore} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst enhancer = composeEnhancers(\n    applyMiddleware(thunk),\n);\nconst store = createStore(rootReducer, enhancer);\n\n\nexport default store;","import React from \"react\";\nimport style from \"./MenuToggle.module.scss\";\n\nconst MenuToggle = props =>{\n\n    const cls = [\n        style[\"MenuToggle\"],\n        \"fa\"\n    ]\n\n    if (props.isOpen){\n        cls.push(style.open);\n        cls.push(\"fa-times\");\n    }else {\n        cls.push(\"fa-bars\");\n    }\n\n    return(\n        <i\n            className={cls.join(\" \")}\n            onClick={props.onToggle}\n        />\n    );\n}\n\nexport default MenuToggle;","import React from \"react\";\nimport style from \"./Backdrop.module.scss\";\n\nconst Backdrop = props => {\n    return(\n        <div className={style.Backdrop} onClick={props.onClick}/>\n    )\n}\n\nexport default Backdrop;","import React from \"react\";\nimport style from \"./Button.module.scss\";\n\nconst Button = props => {\n\n    const cls = [\n        style[\"Button\"],\n        style[props.type]\n    ]\n\n    return(\n        <button\n            onClick={props.onClick}\n            className={cls.join(\" \")}\n            disabled={props.disabled}\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport default Button;","import React from \"react\";\nimport style from \"./Drawer.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Button from \"../../UI/Button/Button\";\n\nclass Drawer extends React.Component {\n    renderLinks = (links) => {\n        return (\n            links.map((link, index) => (\n                <li key={index}>\n                    <NavLink exact={link.exact}\n                             to={link.to}\n                             activeClassName={style.active}\n                             onClick={this.props.onClick}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            ))\n        );\n    }\n    render() {\n        let links = [\n            {to: \"/\", label: \"Список тестов\", exact: true},\n            {to: \"/auth\", label: \"Авторизация\", exact: false},\n        ];\n\n        if(this.props.isAuth){\n            links = [\n                {to: \"/\", label: \"Список тестов\", exact: true},\n                {to: \"/quiz-creator\", label: \"Добавить тест\", exact: false},\n                // Еще одна кнопка выход в стиле обшего списка\n                // {to: \"/logout\", label: \"Выйти\", exact: false},\n            ]\n        }\n        return (\n            <>\n                {this.props.isOpen && <Backdrop onClick={this.props.onClick}/>}\n                <nav className={style.Drawer + \" \" + (this.props.isOpen && style.open)}>\n                    <ul>\n                        {this.renderLinks(links)}\n                    </ul>\n                    {/*В место текстовой строки Выйти из аккаунта можно сделать крассную кнопку*/}\n                    {this.props.isAuth && <NavLink to=\"/logout\">\n                        <Button\n                            style={{marginLeft: 20}}\n                            type=\"error\">\n                            Выйти\n                        </Button>\n                    </NavLink>}\n                </nav>\n            </>\n        );\n    }\n}\n\nexport default Drawer;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://quiz-react-app-3094a-default-rtdb.firebaseio.com/\",\n});","import axios from \"../../axios/axios\";\n\nimport {\n    FETCH_QUIZ_START, FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZ_ERROR, FETCH_QUIZ_BY_ID_SUCCESS,\n    QUIZ_RETRY, QUIZ_SET_STATE, QUIZ_FINISHED,\n    NEXT_QUESTION,\n} from \"./actionTypes\";\n\nexport const fetchQuizStart = () => ({\n    type: FETCH_QUIZ_START\n});\n\nexport const fetchQuizSuccess = (payload) => {\n    return {type: FETCH_QUIZ_SUCCESS, payload};\n}\n\nexport const fetchQuizByIdSuccess = (payload) => {\n    return {type: FETCH_QUIZ_BY_ID_SUCCESS, payload};\n}\n\nexport const fetchQuizError = (error)  => ({\n    type: FETCH_QUIZ_ERROR,\n    error\n});\n\nexport const quizSetState = (answerState, results) => ({\n        type: QUIZ_SET_STATE, answerState, results\n});\n\nexport const nextQuestion = () => ({\n    type: NEXT_QUESTION\n});\n\nexport const quizFinished = () => ({\n    type: QUIZ_FINISHED\n});\n\nexport const quizRetry = () => {\n    return {type: QUIZ_RETRY};\n}\n export const toggleQuizError = error => dispatch => {\n    dispatch(fetchQuizError(error));\n\n    setTimeout(() => {\n        dispatch(fetchQuizError(null))\n    }, 7000);\n }\n\nexport const fetchQuiz = () => async dispatch => {\n    dispatch(fetchQuizStart());\n\n    try {\n        const response = await axios.get(\"quizes.json\");\n        const payload = Object.keys(response.data).map(el => ({id: el}));\n        dispatch(fetchQuizSuccess(payload));\n\n    } catch (e) {\n        dispatch(fetchQuizError(\"Тестов пока нет\"));\n    }\n}\n\nexport const fetchQuizById = (id) => async dispatch => {\n    dispatch(fetchQuizStart());\n    try {\n        let response = await axios.get(`quizes/${id}.json`);\n        dispatch(fetchQuizByIdSuccess(response.data));\n    } catch (e) {\n        dispatch(fetchQuizError(e.toString()));\n    }\n}\n\n// Логика на клик по ответу\n//Получаем правильный ответ у активного вопроса;\n// если в answerState success то return;\n// answerState существует для присвоения класса success или error при клике;\n// Сравниваем правильный ответ с введенным;\n//Если true записываем в answerState и (results(толко если нет false) id и success);\n//Ждем секунду и проверяем последний ли вопрос в списке;\n// Если true выводим Окно с правильными ответами;\n// Если false переключаем вопрос на следующий;\n//Если false записываем в answerState и results id и error ;\nexport const quizAnswerClick = (answerId) => (dispatch, getState) => {\n    const state = getState().quiz;\n\n    //Это чтобы не нажималась кнопка если уже выбран верный ответ\n    if (state.answerState) {\n        const key = Object.keys(state.answerState)[0];\n        if (state.answerState[key] === \"success\") {\n            return;\n        }\n    }\n\n    const question = state.quiz[state.activeQuestion];\n    const results = {...state.results};\n\n\n    if (question.rightAnswer === answerId) {\n        if (!results[question.id]) {\n            results[question.id] = \"success\";\n        }\n        dispatch(quizSetState({[answerId]: \"success\"}, results));\n\n        const timeout = window.setTimeout(() => {\n\n            if (isQuizFinished()) {\n                dispatch(quizFinished());\n            } else {\n                dispatch(nextQuestion());\n            }\n            window.clearTimeout(timeout);\n        }, 1000)\n\n    } else {\n        results[question.id] = \"error\"\n        dispatch(quizSetState({[answerId]: \"error\"}, results));\n    }\n    const isQuizFinished = () => {\n        return state.activeQuestion + 1 === state.quiz.length;\n    }\n}\n","import axios from \"axios\";\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from \"./actionTypes\";\nimport {toggleQuizError} from \"./actions\";\n\nexport const authSuccess = (token) => ({\n    type: AUTH_SUCCESS, token\n});\nexport const authLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"expirationDate\");\n    return ({\n        type: AUTH_LOGOUT\n    });\n}\nexport const autoLogin = () => dispatch => {\n    let token = localStorage.getItem(\"token\");\n    let currentDate = new Date().getTime();\n    let expirationDate = new Date(localStorage.getItem(\"expirationDate\")).getTime();\n    let expirationDateFrontend = (expirationDate - currentDate) / 1000\n\n    if (!token) {\n        dispatch(authLogout());\n    } else if (currentDate > expirationDate) {\n        dispatch(authLogout());\n    } else {\n        dispatch(authSuccess(token));\n        dispatch(autoLogout(expirationDateFrontend));\n    }\n}\n\nexport const autoLogout = (time) => dispatch => {\n    setTimeout(() => {\n        dispatch(authLogout());\n    }, time * 1000);\n}\n\nexport const login = (email, password, isLogin) => {\n    return async dispatch => {\n        const authData = {\n            email, password,\n            returnSecureToken: true\n        };\n        //Создаем переменную url она ведет на эндпоинт регистрации\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBw1voB5XeccAUeeQByIgJKRRhcjoNOR3I\";\n        //Если есть поле isLogin тогда url ведет на эндпоинт авторизации\n        if (isLogin) {\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBw1voB5XeccAUeeQByIgJKRRhcjoNOR3I\";\n        }\n        //Отправляем запрос на сервер\n        try {\n            const response = await axios.post(url, authData);\n            const data = response.data;\n\n            const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n\n            localStorage.setItem(\"token\", data.idToken);\n            localStorage.setItem(\"userId\", data.localId);\n            localStorage.setItem(\"expirationDate\", expirationDate);\n\n            dispatch(authSuccess(response.data.idToken));\n            dispatch(autoLogout(data.expiresIn));\n        } catch (e) {\n            dispatch(toggleQuizError(\"Ошибка авторизации\"));\n        }\n    }\n};","import React from \"react\";\nimport style from \"./TotalError.module.scss\"\n\nconst TotalError = props => {\n    const cls = [style.TotalError];\n\n    if (!!props.error) {\n        cls.push(style.active);\n    }\n\n    return (\n        <div className={cls.join(\" \")}>\n            <i onClick={props.closeErrorHandler} className={style.errorClose + \" fa fa-times\"}/>\n            {!!props.error && <span>{props.error}</span>}\n        </div>\n    )\n}\n\nexport default TotalError;","import React from \"react\";\nimport style from \"./Layout.module.scss\";\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\nimport {connect} from \"react-redux\";\nimport {authLogout} from \"../../redux/actions/auth\";\nimport TotalError from \"../../components/TotalError/TotalError\";\nimport {fetchQuizError} from \"../../redux/actions/actions\";\n\nclass Layout extends React.Component {\n    state = {\n        menu: false,\n    }\n\n    menuToggleHandler = () =>{\n        this.setState({menu: !this.state.menu});\n    }\n    menuCloseHandler = () =>{\n        this.setState({menu: false});\n    }\n    closeErrorHandler = () => {\n        this.props.fetchQuizError(null);\n    }\n\n    render() {\n        return (\n            <div className={style.Layout}>\n                <Drawer isOpen={this.state.menu} onClick={this.menuCloseHandler}\n                        isAuth={this.props.isAuth} authLogout={this.props.authLogout}/>\n                <MenuToggle\n                    isOpen={this.state.menu}\n                    onToggle={this.menuToggleHandler}\n                />\n                <TotalError closeErrorHandler={this.closeErrorHandler} error={this.props.error}/>\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: !!state.auth.token,\n    error: state.quiz.error\n});\n\nexport default connect(mapStateToProps, {authLogout, fetchQuizError})(Layout);","import axios from \"../../axios/axios\";\nimport {ADD_QUESTION, QUIZ_CLEAR} from \"./actionTypes\";\n\n//Добавляет Вопрос в массив в поле создания вопросов\nexport const addQuestion = (newQuestion) => {\n    return {type: ADD_QUESTION, newQuestion}\n}\n//Очищает массив с вопросами после создания квиза\nexport const quizClear = () => {\n    return {type: QUIZ_CLEAR}\n}\n\nexport const quizCreate = () => async (dispatch, getState) => {\n    const state = getState().create;\n    try {\n        await axios.post(\"quizes.json\", state.quiz);\n        dispatch(quizClear());\n    } catch (e) {\n        console.log(e);\n        alert('Какая-то ошибка');\n    }\n}\n\n","export const authValidate = values => {\n    const errors = {};\n\n    if (!values.email) {\n        errors.email = \"Поле не может быть пустым\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Неправильный Email\";\n    }\n\n    if (!values.password) {\n        errors.password = \"Поле не может быть пустым\";\n    } else if (values.password.length < 6) {\n        errors.password = \"Поле не может быть меньше 6 символов\";\n    }\n\n    return errors;\n};\n\nexport const quizCreateValidate = values => {\n    const errors = {};\n\n    Object.keys(values).forEach(field => {\n        if (!values[field]) {\n            errors[field] = \"Поле не может быть пустым\";\n        }\n    });\n\n    return errors;\n}","import React from \"react\";\nimport style from \"./Input.module.scss\";\nimport {Field} from \"formik\";\n\n\nconst Input = props => {\n    const inputType = props.type || \"text\";\n    const isValid = (meta) => (meta.touched && meta.error);\n\n    return (\n            <Field name={props.name}>\n                {({field,  meta}) => (\n                    <div className={`${style.Input} ${isValid(meta) && style.invalid}`}>\n                        <label htmlFor={props.id}>\n                            {props.label}\n                        </label>\n                        <input id={props.id} type={inputType} {...field} />\n                        {isValid(meta) && <span>{meta.error}</span>}\n                    </div>\n                )}\n            </Field>\n    );\n}\n\nexport default Input;","import React from \"react\";\nimport style from \"./Select.module.scss\";\n\nconst Select = props => {\n    const htmlFor = props.label + Math.random();\n    return (\n      <div className={style.Select}>\n          <label htmlFor={htmlFor}>{props.label}</label>\n          <select\n              name={props.name}\n              id={htmlFor}\n              {...props}\n          >\n              {\n                  props.options.map((option, i) => {\n                     return (\n                         <option key={i}>{option.text}</option>\n                     );\n                  })\n              }\n          </select>\n      </div>\n    );\n}\n\nexport default Select;","import {Field, Form, Formik} from \"formik\";\nimport {quizCreateValidate} from \"../../../helpers/validate\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport Select from \"../../../components/UI/Select/Select\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport React from \"react\";\n\nconst QuizCreatorForm = ({createQuizHandler, addQuestionHandler, quiz}) => {\n    return (\n        <Formik\n            initialValues={{\n                rightAnswer: \"1\", question: \"\",\n                option1: \"\", option2: \"\",\n                option3: \"\", option4: \"\",\n            }}\n            validate={quizCreateValidate}\n            onSubmit={() => null}\n        >\n            {({values, isValid, dirty, handleReset}) => (\n                <Form>\n                    <Input id=\"question\" type=\"text\" name=\"question\" label=\"Введите вопрос\"/>\n                    <Input id=\"1\" type=\"text\" name=\"option1\" label=\"Ответ 1\"/>\n                    <Input id=\"2\" type=\"text\" name=\"option2\" label=\"Ответ 2\"/>\n                    <Input id=\"3\" type=\"text\" name=\"option3\" label=\"Ответ 3\"/>\n                    <Input id=\"4\" type=\"text\" name=\"option4\" label=\"Ответ 4\"/>\n\n                    <Field name=\"rightAnswer\" as={Select}\n                           label=\"Выберите правильный ответ\"\n                           options={[\n                               {value: 1, text: 1},\n                               {value: 2, text: 2},\n                               {value: 3, text: 3},\n                               {value: 4, text: 4}\n                           ]}\n                    />\n\n                    <Button type=\"primary\"\n                            disabled={!(isValid && dirty)}\n                            onClick={() => {\n                                addQuestionHandler(isValid, dirty, values);\n                                handleReset();\n                            }}\n                    >\n                        Добавить вопрос\n                    </Button>\n                    <Button type=\"success\" disabled={quiz.length === 0}\n                            onClick={(e) => {\n                                e.preventDefault();\n                                createQuizHandler();\n                                handleReset();\n                            }}\n                    >\n                        Создать тест\n                    </Button>\n                    <div>Вопросов добавлено {quiz.length}</div>\n                </Form>\n            )}\n        </Formik>\n    );\n}\n\nexport default QuizCreatorForm;","import React, {useEffect} from \"react\";\nimport style from \"./QuizCreator.module.scss\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addQuestion, quizClear, quizCreate} from \"../../redux/actions/create\";\nimport QuizCreatorForm from \"./QuizCreatorForm/QuizCreatorForm\";\n\n\nconst QuizCreator = () => {\n    const dispatch = useDispatch();\n    const quiz = useSelector(state => state.create.quiz);\n\n    useEffect(() => {\n        return () => {\n            dispatch(quizClear());\n        }\n    }, [dispatch]);\n\n    const addQuestionHandler = (isValid, dirty, values) => {\n        if (isValid && dirty) {\n            dispatch(addQuestion(\n                {\n                    id: quiz.length + 1,\n                    question: values.question,\n                    rightAnswer: +values.rightAnswer,\n                    answers: [\n                        {text: values.option1, id: 1},\n                        {text: values.option2, id: 2},\n                        {text: values.option3, id: 3},\n                        {text: values.option4, id: 4},\n                    ]\n                }\n            ));\n        }\n    }\n    const createQuizHandler = () => {\n        dispatch(quizCreate());\n    }\n\n    return (\n        <div className={style.QuizCreator}>\n            <div>\n                <h1 className=\"mainTitle\">Создание теста</h1>\n                <QuizCreatorForm addQuestionHandler={addQuestionHandler}\n                                 createQuizHandler={createQuizHandler}\n                                 quiz={quiz}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default QuizCreator;","import React from \"react\";\nimport style from \"./Preloader.module.scss\";\n\nconst Preloader = props => (\n    <div className={style.Preloader}>\n        <div className={style.inner + \" \" + style.one}/>\n        <div className={style.inner + \" \" + style.two}/>\n        <div className={style.inner + \" \" + style.three}/>\n    </div>\n);\n\nexport default Preloader;","import React, {useEffect} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport style from \"./QuizList.module.scss\";\nimport {fetchQuiz} from \"../../redux/actions/actions\";\nimport Preloader from \"../../components/UI/Preloader/Preloader\";\n\nconst QuizList = props => {\n    const dispatch = useDispatch();\n\n    const isFetch = useSelector(state => state.quiz.isFetch)\n    const quizes = useSelector(state => state.quiz.quizes)\n\n    useEffect(() => {\n        dispatch(fetchQuiz());\n    }, [dispatch]);\n\n    const renderQuizes = () => {\n        if (Object.keys(quizes).length !== 0) {\n            return quizes.map((quiz, index) => (\n                <li key={index}>\n                    <NavLink to={\"/quiz/\" + quiz.id}>Тест № {index + 1}</NavLink>\n                </li>\n            ));\n        } else {\n            return (\n                <div style={{color: \"white\", textAlign: \"center\"}}>\n                    <h3 style={{marginBottom: \"0\"}}>Тестов нет</h3>\n                    <p style={{margin: 0, marginTop: 10}}>Чтобы добавить свой тест</p>\n                    <p style={{margin: \"0\"}}>Пройдите регистрацию</p>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className={style.QuizList}>\n            <div>\n                <h1 className=\"mainTitle\">Список тестов</h1>\n                {\n                    isFetch\n                        ? <Preloader/>\n                        : <ul>\n                            {renderQuizes()}\n                        </ul>\n                }\n            </div>\n        </div>\n    )\n}\nexport default QuizList;","import React from \"react\";\nimport style from \"./AuthForm.module.scss\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport {Formik, Form} from 'formik'\nimport Input from \"../../../components/UI/Input/Input\";\nimport {authValidate} from \"../../../helpers/validate\";\n\nconst AuthForm = ({loginHandler, registerHandler}) => {\n    const onLoginHandler = (isValid, dirty, values) => {\n        if (isValid && dirty) {\n            loginHandler(values);\n        }\n    }\n    const onRegisterHandler = (isValid, dirty, values) => {\n        if (isValid && dirty) {\n            registerHandler(values);\n        }\n    }\n\n    return (\n        <div className={style.authForm}>\n            <Formik\n                initialValues={{email: \"\", password: \"\"}}\n                validate={authValidate}\n                onSubmit={() => {\n                }}\n            >\n                {({values, isValid, dirty}) => (\n                    <Form>\n                        <Input id=\"email\" name=\"email\" label=\"Email\" type=\"email\"/>\n                        <Input id=\"password\" name=\"password\" label=\"Password\" type=\"password\"/>\n\n                        <Button type=\"success\" onClick={() => onLoginHandler(isValid, dirty, values)}>Войти\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onRegisterHandler(isValid, dirty, values)}>\n                            Зарегистрироваться\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\nexport default AuthForm;","import React from \"react\";\nimport style from \"./Auth.module.scss\";\nimport {useDispatch} from \"react-redux\";\nimport {login} from \"../../redux/actions/auth\";\nimport AuthForm from \"./AuthForm/AuthForm\";\n\n\nconst Auth = () => {\n    const dispatch = useDispatch();\n    const loginHandler = (values) => {\n        dispatch(login(\n            values.email,\n            values.password,\n            true\n        ));\n    }\n    const registerHandler = (values) => {\n        dispatch(login(\n            values.email,\n            values.password,\n        ));\n    }\n\n    return (\n        <div className={style.Auth}>\n            <div>\n                <h1 className=\"mainTitle\">Авторизация</h1>\n                <AuthForm\n                    loginHandler={loginHandler}\n                    registerHandler={registerHandler}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Auth;","import React from \"react\";\nimport style from \"./AnswerItem.module.scss\"\n\nconst AnswerItem = props => {\n    const classes = [\n        style.AnswerItem,\n    ]\n    if (props.answerState) {\n        classes.push(style[props.answerState]);\n    }\n\n    return (\n        <li className={classes.join(\" \")}\n            onClick={()=>{props.onAnswerClick(props.answer.id)}}\n        >{props.answer.text}</li>\n    )\n}\n\nexport default AnswerItem;","import React from \"react\";\nimport style from \"./AnswersList.module.scss\"\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => (\n    <ul className={style.AnswersList}>\n        {props.answers.map((answer, index) => {\n            return (\n                <AnswerItem key={index} answer={answer}\n                            onAnswerClick={props.onAnswerClick}\n                            answerState={props.answerState ? props.answerState[answer.id] : null}\n                />\n            );\n        })}\n    </ul>\n);\n\nexport default AnswersList;","import React from \"react\";\nimport style from \"./ActiveQuiz.module.scss\";\nimport AnswersList from \"./AnswersList/AnswersList\";\nimport {withRouter} from \"react-router\";\n\nconst ActiveQuiz = (props) => {\n    return (\n        <div className={style.ActiveQuiz}>\n            <p className={style.Question}>\n                <span>\n                <strong>{props.questionNumber}.</strong>\n                &nbsp; {props.question}\n                </span>\n                <small>{props.questionNumber} из {props.quizLengh}</small>\n            </p>\n            <AnswersList answers={props.answers}\n                         onAnswerClick={props.onAnswerClick}\n                         answerState={props.answerState}\n            />\n        </div>\n    );\n}\n\nexport default withRouter(ActiveQuiz);","import React, {useEffect} from \"react\";\nimport style from \"./FinishedQuiz.module.scss\"\nimport Button from \"../UI/Button/Button\";\nimport {withRouter} from \"react-router-dom\";\n\nconst FinishedQuiz = props => {\n    const rightResults = Object.keys(props.results).filter(result => props.results[result] === \"success\");\n\n    const goToListQuizHandler = () =>{\n        // Это можно заменить обернув кнопку в компонент <Link />\n        props.history.push({\n            pathname:\"/\"\n        });\n    }\n    // clear state then will unmount component\n    useEffect(() => props.onRestart);\n\n    return (\n        <div className={style.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const iconStyle = [\n                        \"fa\",\n                        props.results[quizItem.id] === \"success\" ? \"fa fa-check\" : \"fa fa-times\",\n                        style[props.results[quizItem.id]]\n                    ]\n                    return (\n                        <li key={quizItem.id}>\n                            <strong>{index + 1}</strong>&nbsp;\n                            {quizItem.question}\n                            <i className={iconStyle.join(\" \")}/>\n                        </li>\n                    );\n                })}\n            </ul>\n\n            <p>Правильно {rightResults.length} из {props.quizLengh}</p>\n            <div>\n                <Button onClick={props.onRestart} type={\"primary\"}>Повторить</Button>\n                <Button onClick={goToListQuizHandler} type={\"success\"}>Перейтии к списку тестов</Button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default withRouter(FinishedQuiz);","import React, {useEffect} from \"react\";\nimport style from \"./Quiz.module.scss\";\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport Preloader from \"../../components/UI/Preloader/Preloader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    fetchQuizById,\n    quizAnswerClick,\n    quizRetry\n} from \"../../redux/actions/actions\";\n\nconst Quiz = props => {\n    const dispatch = useDispatch();\n    const state = useSelector(state => {\n        return {\n            results: state.quiz.results,\n            isFinished: state.quiz.isFinished,\n            activeQuestion: state.quiz.activeQuestion,\n            answerState: state.quiz.answerState,\n            quiz: state.quiz.quiz,\n            isFetch: state.quiz.isFetch,\n        }\n    });\n\n    const onAnswerClickHandler = answerId => dispatch(quizAnswerClick(answerId));\n\n    const restartHandler = () => dispatch(quizRetry());\n\n    useEffect(() => {\n        dispatch(fetchQuizById(props.match.params.id));\n        //useEffect работает как аналог willUnmount\n        // когда мы возвращаем функцию которая выполняет какое либо действие\n        return () => {dispatch(quizRetry());}\n    }, [dispatch, props.match.params.id]);\n\n    return (\n        <div className={style.Quiz}>\n            <div className={style.QuizWrapper}>\n                <h1 className=\"mainTitle\">Ответьте на все вопросы</h1>\n                {\n                    state.isFetch || !state.quiz\n                        ? <Preloader/>\n                        : <>\n                            {state.isFinished\n                                ? <FinishedQuiz\n                                    quizLengh={state.quiz.length}\n                                    quiz={state.quiz}\n                                    results={state.results}\n                                    onRestart={restartHandler}\n                                />\n                                : <ActiveQuiz\n                                    question={state.quiz[state.activeQuestion].question}\n                                    answers={state.quiz[state.activeQuestion].answers}\n                                    onAnswerClick={onAnswerClickHandler}\n                                    quizLengh={state.quiz.length}\n                                    questionNumber={state.activeQuestion + 1}\n                                    answerState={state.answerState}\n                                />\n                            }\n                        </>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Quiz;","import {useEffect} from \"react\";\nimport {authLogout} from \"../../redux/actions/auth\";\nimport {Redirect} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\n\nconst Logout = props => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(authLogout());\n    }, [dispatch])\n\n    return (\n        <Redirect to={\"/\"}/>\n    )\n}\nexport default Logout;","import {Switch, Route, Redirect, withRouter} from \"react-router-dom\";\nimport Layout from \"./hoc/Layout/Layout\";\n\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {useEffect} from \"react\";\nimport {autoLogin} from \"./redux/actions/auth\";\n\nconst App = () => {\n    const isAuth = useSelector(state => !!state.auth.token);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(autoLogin())\n    }, [dispatch]);\n\n    let routes = [\n        <Switch key=\"switch\">\n            <Route path=\"/auth\" component={Auth}/>,\n            <Route path=\"/quiz/:id\" component={Quiz}/>,\n            <Route exact path=\"/\" component={QuizList}/>,\n            <Redirect to=\"/\"/>\n        </Switch>\n    ];\n\n    if (isAuth) {\n        routes = [\n            <Switch key=\"switch\">\n                <Route path=\"/quiz-creator\" component={QuizCreator}/>,\n                <Route path=\"/quiz/:id\" component={Quiz}/>,\n                <Route path=\"/logout\" component={Logout}/>,\n                <Route exact path=\"/\" component={QuizList}/>,\n                <Redirect to=\"/\"/>\n            </Switch>\n        ];\n    }\n\n    return (\n        <Layout>\n            {routes}\n        </Layout>\n    );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}