{"version":3,"sources":["components/UI/Preloader/Preloader.module.scss","components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","components/UI/Button/Button.module.scss","components/UI/Input/Input.module.scss","containers/Auth/Auth.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","containers/QuizList/QuizList.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","redux/actions/actionTypes.js","redux/reducers/quiz.js","redux/reducers/create.js","redux/reducers/auth.js","redux/reducers/rootReducer.js","redux/store.js","components/Navigation/MenuToggle/MenuToggle.jsx","components/UI/Backdrop/Backdrop.jsx","components/UI/Button/Button.jsx","components/Navigation/Drawer/Drawer.jsx","components/Logout/Logout.jsx","redux/actions/auth.js","hoc/Layout/Layout.jsx","form/formFramework.js","components/UI/Input/Input.jsx","components/UI/Select/Select.jsx","axios/axios.js","containers/QuizCreator/QuizCreator.jsx","redux/actions/create.js","redux/actions/actions.js","components/UI/Preloader/Preloader.jsx","containers/QuizList/QuizList.jsx","containers/Auth/Auth.jsx","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.jsx","components/ActiveQuiz/AnswersList/AnswersList.jsx","components/ActiveQuiz/ActiveQuiz.jsx","components/FinishedQuiz/FinishedQuiz.jsx","containers/Quiz/Quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FETCH_QUIZ_START","FETCH_QUIZ_SUCCESS","FETCH_QUIZ_BY_ID_SUCCESS","FETCH_QUIZ_ERROR","QUIZ_SET_STATE","NEXT_QUESTION","QUIZ_FINISHED","QUIZ_RETRY","ADD_QUESTION","QUIZ_CLEAR","AUTH_SUCCESS","AUTH_LOGOUT","initialState","error","isFetch","quizes","results","isFinished","activeQuestion","answerState","quiz","state","action","type","payload","createReducer","newQuestion","filter","token","authReducer","combineReducers","create","auth","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","rootReducer","MenuToggle","props","cls","style","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Button","disabled","children","Drawer","renderLinks","links","map","link","index","exact","to","activeClassName","active","label","this","isAuth","marginLeft","React","Component","Logout","dispatch","useDispatch","useEffect","authLogout","authSuccess","localStorage","removeItem","autoLogout","time","console","log","setTimeout","Layout","menu","menuToggleHandler","setState","menuCloseHandler","connect","createFormControl","config","validation","value","valid","touched","validateControl","isValid","required","trim","formValidate","formControls","isFormValid","control","hasOwnProperty","Input","inputType","isInvalid","shouldValidate","invalid","onChange","errorMessage","Select","htmlFor","Math","random","id","options","option","i","text","axios","baseURL","createOptionControl","number","createFormControls","question","option1","option2","option3","option4","QuizCreator","rightAnswer","onChangeHandler","controlName","onSubmitHandler","event","preventDefault","addQuestionHandler","addQuestion","length","answers","createQuizHandler","a","quizCreate","renderFormControls","Object","keys","Fragment","e","target","changeAnswerHandler","select","onSubmit","getState","quizCreator","post","alert","fetchQuizStart","fetchQuizSuccess","fetchQuizError","quizSetState","quizRetry","quizAnswerClick","answerId","key","timeout","isQuizFinished","clearTimeout","Preloader","inner","one","two","three","QuizList","useSelector","get","response","data","el","color","textAlign","marginBottom","marginTop","Auth","email","maxLength","password","minLength","submitHandler","is","forEach","item","inputRenderHandler","loginHandler","login","registerHandler","authForm","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","AnswerItem","classes","onAnswerClick","answer","AnswersList","withRouter","ActiveQuiz","Question","questionNumber","quizLengh","rightResults","result","onRestart","FinishedQuiz","quizItem","iconStyle","history","pathname","Quiz","match","params","QuizWrapper","getItem","currentDate","expirationDateFrontend","routes","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e62254e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__13zsU\",\"inner\":\"Preloader_inner__1SMf8\",\"one\":\"Preloader_one__1dTte\",\"cssload-rotate-one\":\"Preloader_cssload-rotate-one__3X2V9\",\"two\":\"Preloader_two__Q_uDB\",\"cssload-rotate-two\":\"Preloader_cssload-rotate-two__2N_HN\",\"three\":\"Preloader_three__2wnFm\",\"cssload-rotate-three\":\"Preloader_cssload-rotate-three__14D_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"open\":\"Drawer_open__3ZQEA\",\"active\":\"Drawer_active__2oACK\",\"logout\":\"Drawer_logout__1YKq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"error\":\"Button_error__A4xET\",\"success\":\"Button_success__qdwm8\",\"primary\":\"Button_primary__CVuDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\",\"authForm\":\"Auth_authForm__1ycbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\",\"QuizWrapper\":\"Quiz_QuizWrapper__2wTef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2OH8k\",\"Question\":\"ActiveQuiz_Question__3-k9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__uovHA\",\"error\":\"AnswerItem_error__2qb2c\",\"success\":\"AnswerItem_success__XCXzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2aARn\",\"error\":\"FinishedQuiz_error__2PlTT\",\"success\":\"FinishedQuiz_success__2EeEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1ulOJ\"};","export const FETCH_QUIZ_START = \"quiz/FETCH_QUIZ_START\";\nexport const FETCH_QUIZ_SUCCESS = \"quiz/FETCH_QUIZ_SUCCESS\";\nexport const FETCH_QUIZ_BY_ID_SUCCESS = \"quiz/FETCH_QUIZ_BY_ID_SUCCESS\";\nexport const FETCH_QUIZ_ERROR = \"quiz/SET_QUIZ_ERROR\";\n\nexport const QUIZ_SET_STATE = \"quiz/QUIZ_SET_STATE\";\nexport const NEXT_QUESTION = \"quiz/NEXT_QUESTION\";\nexport const QUIZ_FINISHED = \"quiz/QUIZ_FINISHED\";\nexport const QUIZ_RETRY = \"quiz/QUIZ_RETRY\";\n\nexport const ADD_QUESTION = \"quizCreator/ADD_QUESTION\";\nexport const QUIZ_CLEAR = \"quizCreator/QUIZ_CLEAR\";\n\nexport const AUTH_SUCCESS = \"auth/AUTH_SUCCESS\";\nexport const AUTH_LOGOUT = \"auth/AUTH_LOGOUT\";","import {\n    FETCH_QUIZ_ERROR, FETCH_QUIZ_START,\n    FETCH_QUIZ_SUCCESS, FETCH_QUIZ_BY_ID_SUCCESS,\n    QUIZ_SET_STATE, NEXT_QUESTION, QUIZ_FINISHED,\n    QUIZ_RETRY} from \"../actions/actionTypes\";\n\nconst initialState = {\n    error: null,\n    isFetch: false,\n    quizes: [],\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // {[id]: \"success\" || \"error\"}\n    quiz: null,\n}\nconst quiz = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_QUIZ_START:{\n            return {\n                ...state,\n                isFetch: true\n            }\n        }\n        case FETCH_QUIZ_SUCCESS: {\n            return {\n                ...state,\n                isFetch: false,\n                quizes: action.payload\n            }\n        }\n        case FETCH_QUIZ_BY_ID_SUCCESS: {\n            return {\n                ...state,\n                isFetch: false,\n                quiz: action.payload\n            }\n        }\n        case FETCH_QUIZ_ERROR: {\n            return {\n                ...state,\n                isFetch: false,\n                error: action.error\n            }\n        }\n        case QUIZ_SET_STATE: {\n            return {\n                ...state,\n                answerState: action.answerState,\n                results: action.results\n            }\n        }\n        case NEXT_QUESTION: {\n            return {\n                ...state,\n                activeQuestion: state.activeQuestion + 1,\n                answerState: null\n            }\n        }\n        case QUIZ_FINISHED: {\n            return {\n                ...state,\n                isFinished: true\n            }\n        }\n        case QUIZ_RETRY: {\n            return {\n                ...state,\n                isFinished: false,\n                activeQuestion: 0,\n                answerState: null,\n                // Надо ли очищать массив имутабельно\n                results: {},\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default quiz;","import {ADD_QUESTION, QUIZ_CLEAR} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quiz: [],\n}\n\nconst createReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_QUESTION: {\n            return {\n                ...state,\n                quiz: [...state.quiz, action.newQuestion]\n            }\n        }\n        case QUIZ_CLEAR: {\n            return {\n                ...state,\n                quiz: state.quiz.filter(() => false)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default createReducer;","import {AUTH_SUCCESS, AUTH_LOGOUT} from \"../actions/actionTypes\";\n\nconst initialState = {\n    token: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AUTH_SUCCESS: {\n            return {\n                ...state,\n                token: action.token\n            }\n        }\n        case AUTH_LOGOUT: {\n            return {\n                ...state,\n                token: null\n            }\n        }\n        default :{\n            return state;\n        }\n    }\n}\n\nexport default authReducer;","import {combineReducers} from \"redux\";\nimport quiz from \"./quiz\";\nimport createReducer from \"./create\";\nimport authReducer from \"./auth\";\n\nexport default combineReducers({\n    quiz: quiz,\n    create: createReducer,\n    auth: authReducer\n});","import {applyMiddleware, compose, createStore} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst enhancer = composeEnhancers(\n    applyMiddleware(thunk),\n);\nconst store = createStore(rootReducer, enhancer);\n\n\nexport default store;","import React from \"react\";\nimport style from \"./MenuToggle.module.scss\";\n\nconst MenuToggle = props =>{\n\n    const cls = [\n        style[\"MenuToggle\"],\n        \"fa\"\n    ]\n\n    if (props.isOpen){\n        cls.push(style.open);\n        cls.push(\"fa-times\");\n    }else {\n        cls.push(\"fa-bars\");\n    }\n\n    return(\n        <i\n            className={cls.join(\" \")}\n            onClick={props.onToggle}\n        />\n    );\n}\n\nexport default MenuToggle;","import React from \"react\";\nimport style from \"./Backdrop.module.scss\";\n\nconst Backdrop = props => {\n    return(\n        <div className={style.Backdrop} onClick={props.onClick}/>\n    )\n}\n\nexport default Backdrop;","import React from \"react\";\nimport style from \"./Button.module.scss\";\n\nconst Button = props => {\n\n    const cls = [\n        style[\"Button\"],\n        style[props.type]\n    ]\n\n    return(\n        <button\n            onClick={props.onClick}\n            className={cls.join(\" \")}\n            disabled={props.disabled}\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport default Button;","import React from \"react\";\nimport style from \"./Drawer.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Button from \"../../UI/Button/Button\";\n\nclass Drawer extends React.Component {\n    renderLinks = (links) => {\n        return (\n            links.map((link, index) => (\n                <li key={index}>\n                    <NavLink exact={link.exact}\n                             to={link.to}\n                             activeClassName={style.active}\n                             onClick={this.props.onClick}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            ))\n        );\n    }\n    render() {\n        let links = [\n            {to: \"/\", label: \"Список тестов\", exact: true},\n            {to: \"/auth\", label: \"Авторизация\", exact: false},\n        ];\n\n        if(this.props.isAuth){\n            links = [\n                {to: \"/\", label: \"Список тестов\", exact: true},\n                {to: \"/quiz-creator\", label: \"Добавить тест\", exact: false},\n                // Еще одна кнопка выход в стиле обшего списка\n                // {to: \"/logout\", label: \"Выйти\", exact: false},\n            ]\n        }\n        return (\n            <>\n                {this.props.isOpen && <Backdrop onClick={this.props.onClick}/>}\n                <nav className={style.Drawer + \" \" + (this.props.isOpen && style.open)}>\n                    <ul>\n                        {this.renderLinks(links)}\n                    </ul>\n                    {/*В место текстовой строки Выйти из аккаунта можно сделать крассную кнопку*/}\n                    {this.props.isAuth && <NavLink to=\"/logout\">\n                        <Button\n                            style={{marginLeft: 20}}\n                            type=\"error\">\n                            Выйти\n                        </Button>\n                    </NavLink>}\n                </nav>\n            </>\n        );\n    }\n}\n\nexport default Drawer;","import {useEffect} from \"react\";\nimport {authLogout} from \"../../redux/actions/auth\";\nimport {Redirect} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\n\nconst Logout = props => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(authLogout());\n    }, [dispatch])\n\n    return (\n        <Redirect to={\"/\"}/>\n    )\n}\nexport default Logout;","import axios from \"axios\";\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from \"./actionTypes\";\nimport Logout from \"../../components/Logout/Logout\";\n\nexport const authSuccess = (token) => ({\n    type: AUTH_SUCCESS, token\n});\nexport const authLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"expirationDate\");\n    return ({\n        type: AUTH_LOGOUT\n    });\n}\nexport const autoLogin = () => dispatch => {\n    let token = localStorage.getItem(\"token\");\n    let currentDate = new Date().getTime();\n    let expirationDate = new Date(localStorage.getItem(\"expirationDate\")).getTime();\n    let expirationDateFrontend = (expirationDate - currentDate) / 1000\n\n    if (!token) {\n        dispatch(authLogout());\n    } else if (currentDate > expirationDate) {\n        dispatch(authLogout());\n    } else {\n        dispatch(authSuccess(token));\n        dispatch(autoLogout(expirationDateFrontend));\n    }\n}\n\nexport const autoLogout = (time) => dispatch => {\n    console.log('time autoLogout :' + time)\n    setTimeout(() => {\n        dispatch(authLogout());\n    }, time * 1000);\n}\n\nexport const login = (email, password, isLogin) => {\n    return async dispatch => {\n        const authData = {\n            email, password,\n            returnSecureToken: true\n        };\n        //Создаем переменную url она ведет на эндпоинт регистрации\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBw1voB5XeccAUeeQByIgJKRRhcjoNOR3I\";\n        //Если есть поле isLogin тогда url ведет на эндпоинт авторизации\n        if (isLogin) {\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBw1voB5XeccAUeeQByIgJKRRhcjoNOR3I\";\n        }\n        //Отправляем запрос на сервер\n        try {\n            const response = await axios.post(url, authData);\n            const data = response.data;\n\n            const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n\n            localStorage.setItem(\"token\", data.idToken);\n            localStorage.setItem(\"userId\", data.localId);\n            localStorage.setItem(\"expirationDate\", expirationDate);\n\n            dispatch(authSuccess(response.data.idToken));\n            dispatch(autoLogout(data.expiresIn));\n        } catch (e) {\n            console.error(e);\n        }\n    }\n};","import React from \"react\";\nimport style from \"./Layout.module.scss\";\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\nimport {connect} from \"react-redux\";\nimport {authLogout} from \"../../redux/actions/auth\";\n\nclass Layout extends React.Component {\n    state = {\n        menu: false,\n    }\n\n    menuToggleHandler = () =>{\n        this.setState({menu: !this.state.menu});\n    }\n    menuCloseHandler = () =>{\n        this.setState({menu: false});\n    }\n    render() {\n        return (\n            <div className={style.Layout}>\n                <Drawer isOpen={this.state.menu} onClick={this.menuCloseHandler}\n                        isAuth={this.props.isAuth} authLogout={this.props.authLogout}/>\n                <MenuToggle\n                    isOpen={this.state.menu}\n                    onToggle={this.menuToggleHandler}\n                />\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: !!state.auth.token\n});\n\nexport default connect(mapStateToProps, {authLogout})(Layout);","export const createFormControl = (config = {}, validation = {}) => {\n    return {\n        value: \"\",\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n    }\n}\n\nexport const validateControl = (value, validation = null) => {\n    if (!validation) {\n        return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required && isValid) {\n        isValid = value.trim() !== \"\";\n    }\n\n    return isValid;\n}\n\nexport const formValidate = (formControls) => {\n    let isFormValid = true;\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid;\n        }\n    }\n\n    return isFormValid;\n}","import React from \"react\";\nimport style from \"./Input.module.scss\";\n\nconst Input = props => {\n    const inputType = props.type || \"text\";\n    const cls = [style.Input,]\n\n    const isInvalid = ({touched, valid, shouldValidate}) => {\n        return !valid && shouldValidate && touched;\n    }\n\n    if (isInvalid(props)) {\n        cls.push(style.invalid);\n    }\n\n    return(\n        <div className={cls.join(\" \")}>\n            <label>\n                {props.label}\n            </label>\n            <input\n                type={inputType}\n                value={props.value}\n                onChange={props.onChange}\n            />\n            {isInvalid(props) && <span>{props.errorMessage || \"Введите верное значение\"}</span>}\n        </div>\n    );\n}\n\nexport default Input;","import React from \"react\";\nimport style from \"./Select.module.scss\";\n\nconst Select = props => {\n    const htmlFor = props.label + Math.random();\n    return (\n      <div className={style.Select}>\n          <label htmlFor={htmlFor}>{props.label}</label>\n          <select\n              id={htmlFor}\n              value={props.value}\n              onChange={props.onChange}\n          >\n              {\n                  props.options.map((option, i) => {\n                     return (\n                         <option key={i} value={option.value}>{option.text}</option>\n                     );\n                  })\n              }\n          </select>\n      </div>\n    );\n}\n\nexport default Select;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'https://quiz-react-app-3094a-default-rtdb.firebaseio.com/',\n});","import React from \"react\";\nimport style from \"./QuizCreator.module.scss\";\nimport Button from \"../../components/UI/Button/Button\";\nimport {createFormControl, formValidate, validateControl} from \"../../form/formFramework\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Select from \"../../components/UI/Select/Select\";\nimport {connect} from \"react-redux\";\nimport {addQuestion, quizCreate} from \"../../redux/actions/create\";\n\nconst createOptionControl = (number) => {\n    return createFormControl({\n        label: `Ответ ${number}`,\n        errorMessage: \"Текст не может быть пустым\",\n        id: number\n    }, {required: true});\n}\n\nconst createFormControls = () => {\n    return {\n        question: createFormControl({\n            label: \"Введите вопрос\",\n            errorMessage: \"Вопрос не может быть пустым\"\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nclass QuizCreator extends React.Component {\n    state = {\n        rightAnswer: 1,\n        isFormValid: false,\n        formControls: createFormControls()\n    }\n    onChangeHandler = (value, controlName) => {\n        const formControls = {...this.state.formControls};\n        const control = {...formControls[controlName]};\n\n        control.value = value;\n        control.touched = true;\n        control.valid = validateControl(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        this.setState({\n            formControls,\n            isFormValid: formValidate(formControls)\n        });\n    }\n    onSubmitHandler = event => {\n        event.preventDefault();\n    }\n    addQuestionHandler = (event) => {\n        event.preventDefault();\n\n        const {question, option1, option2, option3, option4} = this.state.formControls;\n\n        this.props.addQuestion({\n            id: this.props.quiz.length + 1,\n            question: question.value,\n            rightAnswer: +this.state.rightAnswer,\n            answers: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id},\n            ]\n        });\n\n        this.setState({\n            rightAnswer: 1,\n            isFormValid: false,\n            formControls: createFormControls()\n        });\n    }\n\n    createQuizHandler = async (event) => {\n        event.preventDefault();\n        this.props.quizCreate();\n        this.setState({\n            rightAnswer: 1,\n            isFormValid: false,\n            formControls: createFormControls(),\n        });\n    }\n\n    renderFormControls = () => {\n        return (\n            Object.keys(this.state.formControls).map((controlName, index) => {\n                const control = this.state.formControls[controlName];\n                return (\n                    <React.Fragment key={index}>\n                        <Input\n                            label={control.label}\n                            errorMessage={control.errorMessage}\n                            valid={control.valid}\n                            shouldValidate={!!control.validation}\n                            touched={control.touched}\n                            value={control.value}\n                            onChange={(e) => {\n                                this.onChangeHandler(e.target.value, controlName)\n                            }}\n                        />\n                        {index === 0 && <hr/>}\n                    </React.Fragment>\n                );\n            })\n        );\n    }\n\n    changeAnswerHandler = (event) => {\n        this.setState({\n            rightAnswer: event.target.value\n        });\n    }\n\n    render() {\n        const select = (\n            <Select\n                label=\"Выберите правильный ответ\"\n                value={this.state.rightAnswer}\n                onChange={this.changeAnswerHandler}\n                options={[\n                    {value: 1, text: 1},\n                    {value: 2, text: 2},\n                    {value: 3, text: 3},\n                    {value: 4, text: 4}\n                ]}\n            />\n        );\n\n        return (\n            <div className={style.QuizCreator}>\n                <div>\n                    <h1 className=\"mainTitle\">Создание теста</h1>\n\n                    <form onSubmit={this.onSubmitHandler}>\n                        {this.renderFormControls()}\n                        {select}\n\n                        <Button\n                            type=\"primary\"\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                        </Button>\n                        <Button\n                            type=\"success\"\n                            onClick={this.createQuizHandler}\n                            disabled={this.props.quiz.length === 0}\n                        >\n                            Создать тест\n                        </Button>\n                        <div>Вопросов добавлено {this.props.quiz.length}</div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        quiz: state.create.quiz\n    }\n}\n\nexport default connect(mapStateToProps, {addQuestion, quizCreate})(QuizCreator);","import axios from \"../../axios/axios\";\nimport {ADD_QUESTION, QUIZ_CLEAR} from \"./actionTypes\";\n\n//Добавляет Вопрос в массив в поле создания вопросов\nexport const addQuestion = (newQuestion) => {\n    return {type: ADD_QUESTION, newQuestion}\n}\n//Очищает массив с вопросами после создания квиза\nexport const quizClear = () => {\n    return {type: QUIZ_CLEAR}\n}\n\nexport const quizCreate = () => async (dispatch, getState) => {\n    const state = getState().quizCreator;\n    try {\n        await axios.post(\"quizes.json\", state.quiz);\n        dispatch(quizClear());\n    } catch (e) {\n        console.log(e);\n        alert('Какая-то ошибка');\n    }\n}\n\n","import axios from \"../../axios/axios\";\n\nimport {\n    FETCH_QUIZ_START, FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZ_ERROR, FETCH_QUIZ_BY_ID_SUCCESS,\n    QUIZ_RETRY, QUIZ_SET_STATE, QUIZ_FINISHED,\n    NEXT_QUESTION,\n} from \"./actionTypes\";\n\nexport const fetchQuizStart = () => ({\n    type: FETCH_QUIZ_START\n});\n\nexport const fetchQuizSuccess = (payload) => {\n    return {type: FETCH_QUIZ_SUCCESS, payload};\n}\n\nexport const fetchQuizByIdSuccess = (payload) => {\n    return {type: FETCH_QUIZ_BY_ID_SUCCESS, payload};\n}\n\nexport const fetchQuizError = (error) => ({\n    type: FETCH_QUIZ_ERROR,\n    error\n});\n\nexport const quizSetState = (answerState, results) => ({\n        type: QUIZ_SET_STATE, answerState, results\n});\n\nexport const nextQuestion = () => ({\n    type: NEXT_QUESTION\n});\n\nexport const quizFinished = () => ({\n    type: QUIZ_FINISHED\n});\n\nexport const quizRetry = () => {\n    return {type: QUIZ_RETRY};\n}\n\nexport const fetchQuiz = () => async dispatch => {\n    dispatch(fetchQuizStart());\n\n    try {\n        const response = await axios.get(\"quizes.json\");\n        const payload = Object.keys(response.data).map(el => ({id: el}));\n        dispatch(fetchQuizSuccess(payload));\n\n    } catch (e) {\n        dispatch(fetchQuizError(e));\n    }\n}\n\nexport const fetchQuizById = (id) => async dispatch => {\n    dispatch(fetchQuizStart());\n    try {\n        let response = await axios.get(`quizes/${id}.json`);\n        dispatch(fetchQuizByIdSuccess(response.data));\n    } catch (e) {\n        dispatch(fetchQuizError(e));\n    }\n}\n\n// Логика на клик по ответу\n//Получаем правильный ответ у активного вопроса;\n// если в answerState success то return;\n// answerState существует для присвоения класса success или error при клике;\n// Сравниваем правильный ответ с введенным;\n//Если true записываем в answerState и (results(толко если нет false) id и success);\n//Ждем секунду и проверяем последний ли вопрос в списке;\n// Если true выводим Окно с правильными ответами;\n// Если false переключаем вопрос на следующий;\n//Если false записываем в answerState и results id и error ;\nexport const quizAnswerClick = (answerId) => (dispatch, getState) => {\n    const state = getState().quiz;\n\n    //Это чтобы не нажималась кнопка если уже выбран верный ответ\n    if (state.answerState) {\n        const key = Object.keys(state.answerState)[0];\n        if (state.answerState[key] === \"success\") {\n            return;\n        }\n    }\n\n    const question = state.quiz[state.activeQuestion];\n    const results = {...state.results};\n\n\n    if (question.rightAnswer === answerId) {\n        if (!results[question.id]) {\n            results[question.id] = \"success\";\n        }\n        dispatch(quizSetState({[answerId]: \"success\"}, results));\n\n        const timeout = window.setTimeout(() => {\n\n            if (isQuizFinished()) {\n                dispatch(quizFinished());\n            } else {\n                dispatch(nextQuestion());\n            }\n            window.clearTimeout(timeout);\n        }, 1000)\n\n    } else {\n        results[question.id] = \"error\"\n        dispatch(quizSetState({[answerId]: \"error\"}, results));\n    }\n    const isQuizFinished = () => {\n        return state.activeQuestion + 1 === state.quiz.length;\n    }\n}\n","import React from \"react\";\nimport style from \"./Preloader.module.scss\";\n\nconst Preloader = props => (\n    <div className={style.Preloader}>\n        <div className={style.inner + \" \" + style.one}/>\n        <div className={style.inner + \" \" + style.two}/>\n        <div className={style.inner + \" \" + style.three}/>\n    </div>\n);\n\nexport default Preloader;","import React, {useEffect} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport style from \"./QuizList.module.scss\";\nimport {fetchQuiz} from \"../../redux/actions/actions\";\nimport Preloader from \"../../components/UI/Preloader/Preloader\";\n\nconst QuizList = props => {\n    const dispatch = useDispatch();\n\n    const isFetch = useSelector(state => state.quiz.isFetch)\n    const quizes = useSelector(state => state.quiz.quizes)\n\n    useEffect(() => {\n        dispatch(fetchQuiz());\n    }, [dispatch]);\n\n    const renderQuizes = () => {\n        if (Object.keys(quizes).length !== 0) {\n            return quizes.map((quiz, index) => (\n                <li key={index}>\n                    <NavLink to={\"/quiz/\" + quiz.id}>Тест № {index + 1}</NavLink>\n                </li>\n            ));\n        } else {\n            return (\n                <div style={{color: \"white\", textAlign: \"center\"}}>\n                    <h3 style={{marginBottom: \"0\"}}>Тестов нет</h3>\n                    <h4 style={{marginTop: \"0\"}}>Будут позже</h4>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className={style.QuizList}>\n            <div>\n                <h1 className=\"mainTitle\">Список тестов</h1>\n                {\n                    isFetch\n                        ? <Preloader/>\n                        : <ul>\n                            {renderQuizes()}\n                        </ul>\n                }\n            </div>\n        </div>\n    )\n}\nexport default QuizList;","import React from \"react\";\nimport Button from \"./../../components/UI/Button/Button\";\nimport style from \"./Auth.module.scss\";\nimport Input from \"../../components/UI/Input/Input\";\nimport is from \"is_js\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/actions/auth\";\n\nclass Auth extends React.Component {\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: \"\",\n                type: \"email\",\n                label: \"Email\",\n                errorMessage: \"\",\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true,\n                    maxLength: 25\n                }\n            },\n            password: {\n                value: \"\",\n                type: \"password\",\n                label: \"Пароль\",\n                errorMessage: \"\",\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6,\n                    maxLength: 50\n                }\n            },\n        }\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n    }\n    validateControl = (value, validation) => {\n        if (!validation) {\n            return true;\n        }\n\n        let isValid = true;\n\n        if (validation.required) {\n            if (value.trim() !== \"\") {\n                isValid = true;\n            } else {\n                return {isValid: false, errorMessage: \"Поле не должно быть пустым\"}\n            }\n        }\n\n        if (validation.email) {\n            if (is.email(value)) {\n                isValid = true;\n            } else {\n                return {isValid: false, errorMessage: \"Введите корректный Email\"}\n            }\n        }\n\n        if (validation.minLength) {\n            if (value.trim().length >= validation.minLength) {\n                isValid = true;\n            } else {\n                return {isValid: false, errorMessage: `Минимальная длинна ${validation.minLength} символов`}\n            }\n        }\n\n        if (validation.maxLength) {\n            if (value.trim().length < validation.maxLength) {\n                isValid = true;\n            } else {\n                return {isValid: false, errorMessage: `Максимальная длинна ${validation.maxLength} символов`}\n            }\n        }\n\n        return {isValid};\n    }\n    onChangeHandler = (e, controlName) => {\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n        control.value = e.target.value;\n        control.touched = true;\n\n        let validateControl = this.validateControl(control.value, control.validation);\n        control.valid = validateControl.isValid;\n        control.errorMessage = validateControl.errorMessage;\n\n        formControls[controlName] = control;\n\n        let isFormValid = true;\n\n        Object.keys(formControls).forEach(item => {\n            isFormValid = formControls[item].valid && isFormValid;\n        });\n\n        this.setState({formControls, isFormValid});\n    }\n    inputRenderHandler = () => {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n            return (\n                <Input\n                    key={controlName + index}\n                    value={control.value}\n                    onChange={(e) => {\n                        this.onChangeHandler(e, controlName)\n                    }}\n                    type={control.type}\n                    label={control.label}\n                    errorMessage={control.errorMessage}\n                    valid={control.valid}\n                    touched={control.touched}\n                    shouldValidate={!!control.validation}\n                />\n            );\n        });\n    }\n    loginHandler = () => {\n        this.props.login(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            true\n        );\n    }\n    registerHandler = () => {\n        this.props.login(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n        );\n    }\n\n    render() {\n        return (\n            <div className={style.Auth}>\n                <div>\n                    <h1 className=\"mainTitle\">Авторизация</h1>\n                    <form className={style.authForm} onSubmit={this.submitHandler}>\n\n                        {this.inputRenderHandler()}\n\n                        <Button\n                            type=\"success\"\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Войти\n                        </Button>\n                        <Button\n                            type=\"primary\"\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapDispatchToProps = (dispatch) => ({\n    login: (email, password, isAuth) => dispatch(login(email, password, isAuth)),\n});\nexport default connect(null, mapDispatchToProps)(Auth);","import React from \"react\";\nimport style from \"./AnswerItem.module.scss\"\n\nconst AnswerItem = props => {\n    const classes = [\n        style.AnswerItem,\n    ]\n    if (props.answerState) {\n        classes.push(style[props.answerState]);\n    }\n\n    return (\n        <li className={classes.join(\" \")}\n            onClick={()=>{props.onAnswerClick(props.answer.id)}}\n        >{props.answer.text}</li>\n    )\n}\n\nexport default AnswerItem;","import React from \"react\";\nimport style from \"./AnswersList.module.scss\"\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => (\n    <ul className={style.AnswersList}>\n        {props.answers.map((answer, index) => {\n            return (\n                <AnswerItem key={index} answer={answer}\n                            onAnswerClick={props.onAnswerClick}\n                            answerState={props.answerState ? props.answerState[answer.id] : null}\n                />\n            );\n        })}\n    </ul>\n);\n\nexport default AnswersList;","import React from \"react\";\nimport style from \"./ActiveQuiz.module.scss\";\nimport AnswersList from \"./AnswersList/AnswersList\";\nimport {withRouter} from \"react-router\";\n\nconst ActiveQuiz = (props) => {\n    return (\n        <div className={style.ActiveQuiz}>\n            <p className={style.Question}>\n                <span>\n                <strong>{props.questionNumber}.</strong>\n                &nbsp; {props.question}\n                </span>\n                <small>{props.questionNumber} из {props.quizLengh}</small>\n            </p>\n            <AnswersList answers={props.answers}\n                         onAnswerClick={props.onAnswerClick}\n                         answerState={props.answerState}\n            />\n        </div>\n    );\n}\n\nexport default withRouter(ActiveQuiz);","import React, {useEffect} from \"react\";\nimport style from \"./FinishedQuiz.module.scss\"\nimport Button from \"../UI/Button/Button\";\nimport {withRouter} from \"react-router-dom\";\n\nconst FinishedQuiz = props => {\n    const rightResults = Object.keys(props.results).filter(result => props.results[result] === \"success\");\n\n    const goToListQuizHandler = () =>{\n        // Это можно заменить обернув кнопку в компонент <Link />\n        props.history.push({\n            pathname:\"/\"\n        });\n    }\n    // clear state then will unmount component\n    useEffect(() => props.onRestart);\n\n    return (\n        <div className={style.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const iconStyle = [\n                        \"fa\",\n                        props.results[quizItem.id] === \"success\" ? \"fa fa-check\" : \"fa fa-times\",\n                        style[props.results[quizItem.id]]\n                    ]\n                    return (\n                        <li key={quizItem.id}>\n                            <strong>{index + 1}</strong>&nbsp;\n                            {quizItem.question}\n                            <i className={iconStyle.join(\" \")}/>\n                        </li>\n                    );\n                })}\n            </ul>\n\n            <p>Правильно {rightResults.length} из {props.quizLengh}</p>\n            <div>\n                <Button onClick={props.onRestart} type={\"primary\"}>Повторить</Button>\n                <Button onClick={goToListQuizHandler} type={\"success\"}>Перейтии к списку тестов</Button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default withRouter(FinishedQuiz);","import React, {useEffect} from \"react\";\nimport style from \"./Quiz.module.scss\";\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport Preloader from \"../../components/UI/Preloader/Preloader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    fetchQuizById,\n    quizAnswerClick,\n    quizRetry\n} from \"../../redux/actions/actions\";\n\nconst Quiz = props => {\n    const dispatch = useDispatch();\n    const state = useSelector(state => {\n        return {\n            results: state.quiz.results,\n            isFinished: state.quiz.isFinished,\n            activeQuestion: state.quiz.activeQuestion,\n            answerState: state.quiz.answerState,\n            quiz: state.quiz.quiz,\n            isFetch: state.quiz.isFetch,\n        }\n    });\n\n    const onAnswerClickHandler = answerId => dispatch(quizAnswerClick(answerId));\n\n    const restartHandler = () => dispatch(quizRetry());\n\n    useEffect(() => {\n        dispatch(fetchQuizById(props.match.params.id));\n        //useEffect работает как аналог willUnmount\n        // когда мы возвращаем функцию которая выполняет какое либо действие\n        return () => {dispatch(quizRetry());}\n    }, [dispatch, props.match.params.id]);\n\n    return (\n        <div className={style.Quiz}>\n            <div className={style.QuizWrapper}>\n                <h1 className=\"mainTitle\">Ответьте на все вопросы</h1>\n                {\n                    state.isFetch || !state.quiz\n                        ? <Preloader/>\n                        : <>\n                            {state.isFinished\n                                ? <FinishedQuiz\n                                    quizLengh={state.quiz.length}\n                                    quiz={state.quiz}\n                                    results={state.results}\n                                    onRestart={restartHandler}\n                                />\n                                : <ActiveQuiz\n                                    question={state.quiz[state.activeQuestion].question}\n                                    answers={state.quiz[state.activeQuestion].answers}\n                                    onAnswerClick={onAnswerClickHandler}\n                                    quizLengh={state.quiz.length}\n                                    questionNumber={state.activeQuestion + 1}\n                                    answerState={state.answerState}\n                                />\n                            }\n                        </>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Quiz;","import {Switch, Route, Redirect, withRouter} from \"react-router-dom\";\nimport Layout from \"./hoc/Layout/Layout\";\n\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {useEffect} from \"react\";\nimport {autoLogin} from \"./redux/actions/auth\";\n\nconst App = () => {\n    const isAuth = useSelector(state => !!state.auth.token);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(autoLogin())\n    }, [dispatch]);\n\n    let routes = [\n        <Switch key=\"switch\">\n            <Route path=\"/auth\" component={Auth}/>,\n            <Route path=\"/quiz/:id\" component={Quiz}/>,\n            <Route exact path=\"/\" component={QuizList}/>,\n            <Redirect to=\"/\"/>\n        </Switch>\n    ];\n\n    if (isAuth) {\n        routes = [\n            <Switch key=\"switch\">\n                <Route path=\"/quiz-creator\" component={QuizCreator}/>,\n                <Route path=\"/quiz/:id\" component={Quiz}/>,\n                <Route path=\"/logout\" component={Logout}/>,\n                <Route exact path=\"/\" component={QuizList}/>,\n                <Redirect to=\"/\"/>\n            </Switch>\n        ];\n    }\n\n    return (\n        <Layout>\n            {routes}\n        </Layout>\n    );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nlet app = (\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        {app}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}